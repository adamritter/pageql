{%
param filter default='all' pattern="^(all|following)$";
param username default='';
param follow type=integer optional;
param unfollow type=integer optional;
-- Ensure tables exist
create table if not exists users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT UNIQUE
);
create table if not exists tweets (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    text TEXT NOT NULL,
    created_at TEXT DEFAULT (strftime('%Y-%m-%d %H:%M:%S','now'))
);
create table if not exists following (
    follower_id INTEGER,
    following_id INTEGER,
    primary key(follower_id, following_id)
);
let current_id = select (select id from users where username=:username);
if :follow is not null;
  let uid_temp = select (select id from users where username=:username);
  if :uid_temp is null;
    insert into users(username) values (:username);
    let uid last_insert_rowid();
  else;
    let uid :uid_temp;
  end if;
  insert or ignore into following(follower_id, following_id) values(:uid, :follow);
end if;
if :unfollow is not null;
  let uid = select (select id from users where username=:username);
  if :uid is not null;
    delete from following where follower_id=:uid and following_id=:unfollow;
  end if;
end if;
%}

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Mini Twitter</title>
</head>
<body>
  <h1>Mini Twitter</h1>
  <div style="display:flex; gap:2rem; align-items:flex-start;">
    <div style="flex:1;">
      <input name="username" placeholder="Username" value="{{:username}}" autocomplete="off">
      <select name="filter" hx-get="/twitter/index" hx-target="#tweets" hx-include="[name=username]">
        <option value="all" {%if :filter=='all'%}selected{%end if%}>All</option>
        <option value="following" {%if :filter=='following'%}selected{%end if%}>Following</option>
      </select>
      <input name="text" placeholder="What's happening?" maxlength="280"
             hx-post="/twitter/index/tweet"
             hx-trigger="keyup[key=='Enter']"
             hx-include="[name=username]"
             hx-on:htmx:after-on-load="this.value=''" autofocus>
      <ul id="tweets">
      {%from tweets join users on tweets.user_id=users.id
             where (:filter='all') or
                   (:filter='following' and :current_id is not null and exists(select 1 from following where follower_id=:current_id and following_id=tweets.user_id))
             order by tweets.id desc%}
        <li><strong>{{username}}</strong>: {{text}}</li>
      {%end from%}
      </ul>
    </div>
    <div>
      <h2>Users</h2>
      <ul id="users">
      {%from (
        select u.id, u.username,
               (select count(*) from following f where f.follower_id=:current_id and f.following_id=u.id) as is_following
        from users u
        where u.username != :username
        order by u.username
      )%}
        <li>
          {{username}}
          {%if :is_following == 0%}
            <button hx-get="/twitter/index?username={{:username}}&follow={{id}}&filter={{:filter}}">Follow</button>
          {%else%}
            <button hx-get="/twitter/index?username={{:username}}&unfollow={{id}}&filter={{:filter}}">Unfollow</button>
          {%end if%}
        </li>
      {%end from%}
    </ul>
  </div>
  </div>
</body>
</html>

{%
partial post tweet;
  param username maxlength=32;
  param text maxlength=280;
  let uid_temp = select (select id from users where username=:username);
  if :uid_temp is null;
    insert into users(username) values (:username);
  end if;
  let uid = id from users where username=:username;
  insert into tweets(user_id, text) values (:uid, :text);
end partial

%}
